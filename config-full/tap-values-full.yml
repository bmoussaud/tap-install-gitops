#@ load("@ytt:data", "data")
#@ load("@ytt:yaml", "yaml")

---
#@ def config():
profile: full

accelerator:
  ingress:
    include: true

shared:
  ingress_domain: #@ data.values.tap.domains.main
  image_registry:
    username: #@ data.values.tap.credentials.registry.username
    password: #@ data.values.tap.credentials.registry.password

ceip_policy_disclosed: true

buildservice:
  kp_default_repository: #@ "{}/{}".format(data.values.tap.registry.host, data.values.tap.registry.repositories.buildService)
  kp_default_repository_username: #@ data.values.tap.credentials.registry.username
  kp_default_repository_password: #@ data.values.tap.credentials.registry.password

supply_chain: #@ data.values.tap.supply_chain

#@ if/end data.values.tap.supply_chain == 'basic':
ootb_supply_chain_basic:
  registry:
    server: #@ data.values.tap.registry.host
    repository: #@ data.values.tap.registry.repositories.ootbSupplyChain
  gitops:
    ssh_secret: ""
#@ if/end data.values.tap.supply_chain == 'testing_scanning':
ootb_supply_chain_testing_scanning:
  registry:
    server: #@ data.values.tap.registry.host
    repository: #@ data.values.tap.registry.repositories.ootbSupplyChain
  gitops:
    ssh_secret: ""

#@ if/end data.values.tap.supply_chain == 'testing':
ootb_supply_chain_testing:
  registry:
    server: #@ data.values.tap.registry.host
    repository: #@ data.values.tap.registry.repositories.ootbSupplyChain
  gitops:
    ssh_secret: ""

excluded_packages:
  - policy.apps.tanzu.vmware.com

tap_gui:
  service_type: ClusterIP
  app_config:
    proxy:
      /metadata-store:
        target: https://metadata-store-app.metadata-store:8443/api/v1
        changeOrigin: true
        secure: false
        headers:
          Authorization: "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IkN0TU4xcmRLTFhWYXBORENrakJ2SldMdE5oazhpRndDTHBvbHVFRllaUmcifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtZXRhZGF0YS1zdG9yZSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJtZXRhZGF0YS1zdG9yZS1yZWFkLWNsaWVudCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJtZXRhZGF0YS1zdG9yZS1yZWFkLWNsaWVudCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6Ijc0MmMxNGY4LTgxYjItNDcyNi1iMWFmLTcyOTg2OWJiODJlZiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptZXRhZGF0YS1zdG9yZTptZXRhZGF0YS1zdG9yZS1yZWFkLWNsaWVudCJ9.uQY_krExdQ3W0mQFZNnsHzZJXsf9Uvyx0XAxrLYzeGG-CrIVDeoNEYc8PuY-yZKFO0970M7mruF5bM0r6Df4JjUgp-d6aUA6qoOdV9defndmx9TyfUuZKjXhz4UF63vi0XeSa8vuZTPEiYQzdl04KoxurnrzDqQR8WZWLBB6znePy76qGJKAj7cFznoBJiWIw6ID1NdlHrQA5qOh_rgBpXkJgwB97x5mEXYagxOnc2P13Uvi0hwabgC-nndiBgweKRSckCHUzu94d8PXcUYjQjXXlrsFeJasqdKnHk0NtFkfQ_WEuhwJLo-Svzdhf8Regl8-bh4mC6WJtZDw5XXFg_1lBuSnSHqMQioE7PxHuvmYCko56ipcu-IWxEhaxAue9h8rPy7hz5EKPVEduj_24hqfB5LtyJTb3wW7gF2IeugBOnu2R0yiUBZHQDUqL28q3HEiYpgys4wFXxvFt6SgwNGhW9mukyfoU_AEJdQjl4zUEFEdxrP37zTneKeKPRR1bOlIxz00bKgpu3Ki3qC3Hi7yzFodVSrBsB5VmY9n0J68c5OU8sJaiJ2OPfmr3mn8AyHu3dkSbHeB7-reK9bUeC-QynP8spOfLqRHBlLOw5AcxP6lvzneuHWwbRYcV-AZFm5VD_35m7LZ4fALZJ_L8m1ymRpZSPh5NrjrZLoeN88"
          X-Custom-Source: project-star
    app:
      baseUrl: #@ "http://tap-gui.{}".format(data.values.tap.domains.main)
    customize:
      custom_logo: #@ data.values.tap.logo
      custom_name: #@ "The Benoit TAP Version.{}".format(data.values.tap.version)
    organization:
      name: "MicroPet Corp IT Department"
    integrations:
      #@ if "github" in data.values.tap.credentials and "token" in data.values.tap.credentials.github:
      github:
        - host: github.com
          token: #@ data.values.tap.credentials.github.token
      #@ end
    catalog:
      locations:
        #@ for catalog in data.values.tap.catalogs:
        - type: url
          target: #@ catalog
      #@ end
    backend:
      baseUrl: #@ "http://tap-gui.{}".format(data.values.tap.domains.main)
      cors:
        origin: #@ "http://tap-gui.{}".format(data.values.tap.domains.main)
      #@ if "backstage" in data.values.tap.credentials and "database" in data.values.tap.credentials.backstage:
      backend:
        database:
          client: #@ data.values.tap.credentials.backstage.database.client
          connection:
            host: #@ data.values.tap.credentials.backstage.database.host
            port: #@ data.values.tap.credentials.backstage.database.port
            user: #@ data.values.tap.credentials.backstage.database.username
            password: #@ data.values.tap.credentials.backstage.database.password
            ssl: { rejectUnauthorized: true }
      #@ end
    #@ if "github" in data.values.tap.credentials and "clientId" in data.values.tap.credentials.github and "clientSecret" in data.values.tap.credentials.github:
    auth:
      environment: development
      providers:
        github:
          development:
            clientId: #@ data.values.tap.credentials.github.clientId
            clientSecret: #@ data.values.tap.credentials.github.clientSecret
    #@ end

metadata_store:
  app_service_type: ClusterIP
  ns_for_export_app_cert_not_used_1.1: #@ data.values.tap.devNamespace
  ns_for_export_app_cert_x: "*"
  ns_for_export_app_cert: #@ data.values.tap.devNamespace
  ingress_enabled: "true"

grype:
  namespace: #@ data.values.tap.devNamespace
  targetImagePullSecret: "tap-registry"

contour:
  envoy:
    service:
      type: LoadBalancer

scanning:
  metadataStore:
    url: ""
#@ end
---
apiVersion: v1
kind: Secret
metadata:
  name: tap-values
  namespace: #@ data.values.tap.namespace
type: Opaque
stringData:
  values.yml: #@ yaml.encode(config())
---
apiVersion: packaging.carvel.dev/v1alpha1
kind: PackageInstall
metadata:
  name: tap
  namespace: #@ data.values.tap.namespace
  annotations:
    kapp.k14s.io/change-group: tap
    kapp.k14s.io/change-rule: "upsert after upserting tap-install/rbac"
    kapp.k14s.io/change-rule.repo: "upsert after upserting tap-install/tap-repo"
spec:
  packageRef:
    refName: tap.tanzu.vmware.com
    versionSelection:
      constraints: #@ str(data.values.tap.version)
  serviceAccountName: tap-default-sa
  values:
    - secretRef:
        name: tap-values
