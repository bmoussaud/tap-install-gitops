#@ load("@ytt:data", "data")
#@ load("@ytt:yaml", "yaml")

---
#@ def config():
profile: full

accelerator:
  ingress:
    include: true
    
shared:
  ingress_domain: #@ data.values.tap.domains.main
  image_registry:
    #project_path: #@ data.values.tap.credentials.registry
    username: #@ data.values.tap.credentials.registry.username
    password: #@ data.values.tap.credentials.registry.password
  
ceip_policy_disclosed: true

buildservice:
  kp_default_repository: #@ "{}/{}".format(data.values.tap.registry.host, data.values.tap.registry.repositories.buildService)
  kp_default_repository_username: #@ data.values.tap.credentials.registry.username
  kp_default_repository_password: #@ data.values.tap.credentials.registry.password
  
supply_chain: #@ data.values.tap.supply_chain

#@ if/end data.values.tap.supply_chain == 'basic':
ootb_supply_chain_basic:
  registry:
    server: #@ data.values.tap.registry.host
    repository: #@ data.values.tap.registry.repositories.ootbSupplyChain
  gitops:
    ssh_secret: ""
#@ if/end data.values.tap.supply_chain == 'testing_scanning':
ootb_supply_chain_testing_scanning:
  registry:
    server: #@ data.values.tap.registry.host
    repository: #@ data.values.tap.registry.repositories.ootbSupplyChain
  gitops:
    ssh_secret: ""

#@ if/end data.values.tap.supply_chain == 'testing':
ootb_supply_chain_testing:
  registry:
    server: #@ data.values.tap.registry.host
    repository: #@ data.values.tap.registry.repositories.ootbSupplyChain
  gitops:
    ssh_secret: ""

excluded_packages:
- policy.apps.tanzu.vmware.com

tap_gui:
  service_type: ClusterIP
  app_config:
    proxy:
      /metadata-storeXXXXX:
        target: https://metadata-store-app.metadata-store:8443/api/v1
        changeOrigin: true
        secure: false
        headers:
          Authorization: "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjRtc19QajJ5SS1jNkpSUWxhbHpUWUlJc2lTLXRVZjhJVUx6S0pfYVFtdXMifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtZXRhZGF0YS1zdG9yZSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJtZXRhZGF0YS1zdG9yZS1yZWFkLWNsaWVudC10b2tlbi1iNW5saiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJtZXRhZGF0YS1zdG9yZS1yZWFkLWNsaWVudCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjZjODNmNTgzLTI3ZjktNDVkNy1hNTkyLWE0OTM4MGZlYjQyYiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptZXRhZGF0YS1zdG9yZTptZXRhZGF0YS1zdG9yZS1yZWFkLWNsaWVudCJ9.WNcWi2Ix6gUldcxo679qgWpfEZBLK15uL2cC0i4tWkn8vKoyek9wHCPqqBfXjK-eYDhRDy2-b8IUq7AWChnCr0VvH1223PGN17XHlrRZCj_XZepxrXFKRhM__u4Z7g6JTyJOO3ulea8YAKUTBhF3BeWUqD6D5lkzx3LxY-cnqxzmRS9i0BelLkweCWNFduIH8hIgxDb5taqw7R7Ptoy_jucW2f1wifKlf4tZS6m-NELKyAu66uNNXPw-oM2aroL5hQZElZW3jviuRDdi80Hw1MJCTEZNH_1357AyiV5TqMaeeIQ7FBZ4q83zVW5cxA14algWokwR3S-k2G3wyRdkA8TTMGnhqTap_fnO7aCqeCBwpvsXqEGNUB6JLwanU4cQvc413w7nfoIB0xmAhstCUQKlDFgCv7DYqRgjEvxC1iLcZ73H1rUAHZiPhWAJqp6_hQxBdn3-wSL20ZjBYhnl--4yAA9mIruExsghZnYIjSAgEmtLNTGRvVBCIhYdW2ZV3fBSf4oX8Rn1RlzCSKJCngYh8XDlXM_IsAM5_kIhQsn8d5e-WISW91U20hW7gPB_yFtfGh8wLrdTmveotekPXOsyRjq5gY7IQBFaZCz7nfw0hD8u1ci2YhmCsV99X6iahE11FBKV29eU2vKMXlxsTMbvf2k8tSEl196yBVmNfrU"
          X-Custom-Source: project-star
    app:
      baseUrl: #@ "http://tap-gui.{}".format(data.values.tap.domains.main)
    customize:
      custom_logo: #@ data.values.tap.logo
      custom_name: #@ "The Benoit TAP Version.{}".format(data.values.tap.version)
    organization:
      name: "MicroPet Corp IT Department"
    integrations:
      #@ if "github" in data.values.tap.credentials and "token" in data.values.tap.credentials.github:
      github:
        - host: github.com
          token: #@ data.values.tap.credentials.github.token
      #@ end
    catalog:
      locations:
        #@ for catalog in data.values.tap.catalogs:
        - type: url
          target: #@ catalog
      #@ end
    backend:
      baseUrl: #@ "http://tap-gui.{}".format(data.values.tap.domains.main)
      cors:
        origin: #@ "http://tap-gui.{}".format(data.values.tap.domains.main)
      #@ if "backstage" in data.values.tap.credentials and "database" in data.values.tap.credentials.backstage:
      backend:
        database:
          client: #@ data.values.tap.credentials.backstage.database.client
          connection:
            host: #@ data.values.tap.credentials.backstage.database.host
            port: #@ data.values.tap.credentials.backstage.database.port
            user: #@ data.values.tap.credentials.backstage.database.username
            password: #@ data.values.tap.credentials.backstage.database.password
            ssl: { rejectUnauthorized: true }
      #@ end
    #@ if "github" in data.values.tap.credentials and "clientId" in data.values.tap.credentials.github and "clientSecret" in data.values.tap.credentials.github:
    auth:
      environment: development
      providers:
        github:
          development:
            clientId: #@ data.values.tap.credentials.github.clientId
            clientSecret: #@ data.values.tap.credentials.github.clientSecret
    #@ end

metadata_store:
  app_service_type: ClusterIP
  ns_for_export_app_cert_not_used_1.1: #@ data.values.tap.devNamespace
  ns_for_export_app_cert_x: "*"
  ns_for_export_app_cert: #@ data.values.tap.devNamespace
  ingress_enabled: "true" 

grype:
  namespace: #@ data.values.tap.devNamespace
  targetImagePullSecret: "tap-registry"

contour:
  envoy:
    service:
      type: LoadBalancer

scanning:
  metadataStore:
    url: ""
#@ end
---
apiVersion: v1
kind: Secret
metadata:
  name: tap-values
  namespace: #@ data.values.tap.namespace
type: Opaque
stringData:
  values.yml: #@ yaml.encode(config())
---
apiVersion: packaging.carvel.dev/v1alpha1
kind: PackageInstall
metadata:
  name: tap
  namespace: #@ data.values.tap.namespace
  annotations:
    kapp.k14s.io/change-group: tap
    kapp.k14s.io/change-rule: "upsert after upserting tap-install/rbac"
    kapp.k14s.io/change-rule.repo: "upsert after upserting tap-install/tap-repo"
spec:
  packageRef:
    refName: tap.tanzu.vmware.com
    versionSelection:
      constraints: #@ str(data.values.tap.version)
  serviceAccountName: tap-default-sa
  values:
    - secretRef:
        name: tap-values
